测评问题：
1、好难,基础一点儿都不牢靠,很多知识都不能灵活运用.
2、宝宝心里苦,但宝宝不说.
3、很多例子一到自己写就不会,希望老师帮忙补补.
4、老师讲得很好,最后两道题有点懵!
5、最后两道题能听懂,如何加深理解?今天关于return这种题全错了.
6、考的我外焦里嫩,脑回路太短,转不过来.
7、觉得js和数学一样,学起来很难,考试的时候脑子是空白的,像没学过一样.
8、考试爆炸,还要努力,感觉js差的好远.


1.回去背
2...........
3.你要记得是思路 代码实现的过程不是一朝一夕练出来的过程不会很长 多写多踩坑
4.again
5.加深理解 多做面试题 继续踩坑 理解就慢慢的深了
6....
7.没那么难 你已经过了最难的部分 js现在已经学会了很多东西 之后的东西都是在第一部分基础上学习 前端为什么工资高？
8.是差的远 但不至于好远 努力是必须的
9.快捷键

********有问题不及时问自己憋着 导致欠东西
i的问题
eval josn
window.navigator.userAgent
===========================================================
快捷键
shift+ 上下左右
ctrl+shift+ 上下左右 单词边界
home 本行第一个
end  本行最后一个
pageup 
pagedown
===========================================================
考试最后两道题
1.var a = add(2)(3)(4);//9
2.var a = fn(5).plus(3).miute(6);//2
===========================================================
1.预解析
		预先解析一些东西
			变量、函数 预先解析
		变量：会把变量的声明提升到本作用域最上边，值留在原地
		函数内的变量声明
			如果跟全局重复 使用函数内的 --变量遮蔽
			把声明的变量放在使用之后 -- 预解析 undefined
		预解析作用范围
			函数内部、script标签
		为什么要预解析
			事先把变量准备好，提高性能
===========================================================
2.引用
		1.只有在对象身上才会出现
			arr,json,oDate
			var arr2 = arr;
		2.指的同一个内存;
===========================================================
3.字符串
var str = 'abcdef';
str.charAt(索引);
str.charCodeAt(索引); //返回的是十进制编码 根据字符串返回编码
String.fromCharCode('0x9fa5') 根据编码返回字
for(var i = 0x4e00;i<=0x9fa5;i++){
	document.write(String.fromCharCode(i));
}
十六进制编码
		第一字    一
		最后一个  龥 yu 四声

Unicode
		utf-8 
		gbk 
		gb2312
获取字符串字节
		a 1   1字节
		中文  2字节  gbk gb2312
			  3字节  utf-8
		bytes
getByLen()
=============================================================
4.如何判断json中是否有某个属性？
	in   判断某个对象是否拥有某个属性
		 全局的变量都属于window
		 var json={a:1,b:2}
		 alert('c' in json);
=============================================================
5.异常捕获
	try{
		//尝试执行的代码
	}catch(e){
		//尝试执行的报错 会执行catch；
	}

	优点：
		1).屏蔽报错
		2).可以当判断用
	缺点：
		代码运行缓慢 性能很差
**获取非行间样式
1.if(obj.currentStyle)
obj.currentStyle
				//高版本浏览器中 undefined
				//低版本 object    ie8
**报错是不能当判断条件的
=-=========================================
if简写
||  
从左往右找  找到第一个真的返回
如果都是假的 返回最后一个
=============================================
var a=1;
var b=1;
var c=1;
var d=1;
var a=b=c=d=1; 连等
声明变量不加var  会变成全局变量
==============================================
, 作为运算符
	只看最右边的
  alert((12,5))
  if中 for循环中都可以用;
  分割的作用
  	arr=[1,2,3]
  	json={a:1,b:2}
=====================================================
严格模式
	js作者：布莱登 艾克
	怎么开启严格模式
	'use strict'
1.禁止在if for while等语句中声明函数;(预解析还是在的);
2.声明变量必须加var
作用范围
1.script标签
2.函数内部
3.js文件内部
					以后写加上
============================================================
兼容性：
js js的组成
	ECMAScript js核心解释器  解析语法 、词法
		for(){} while(){} if()  var 
		arr.push();
		arr.pop();

		兼容性：基本都兼容 ECMAScript4
	DOM
		Document Object Model 文档对象模型
		跟页面(html)打交道的
		document.getElementById
		document.getElementsByClassName
		..
		oDiv.style.left..
		兼容性：大部分兼容  不兼容的可以处理
	BOM
		Browser Object Model  浏览器对象模型
		跟浏览器打交道
		window.navigator.userAgent
		alert()
		兼容性：没有兼容性问题  都不兼容 处理不了
===========================================================
标签-元素-节点
DOM
	树：根 、分支
	DOM树：根元素(html) 直观的表现出各个节点之间的关系

		已知一个节点求出任意节点
	获取一层(一级)子元素
		父级.children
	获取父级元素 一层
		obj.parentNode

	兄弟元素
		下一个兄弟节点
			obj.nextSibling
				chrome ff ie9+   object text
				ie8 ie7 li节点 objcect
			obj.nextElementSibling
				chrome ff ie9+   li节点 object
				ie8 ie7 undefined
				兼容性：if
		var oNext = obj.nextElementSibling||obj.nextSibling;
	
		上一个兄弟节点
			obj.prevousSibling
		var oPrev = obj.previousElementSibling||obj.previousSibling;

	首节点
			父级.firstChild
	var oFirst = 父级.firstElementChild || 父级.firstChild;		
	尾节点
			父级.lastChild
    var oLast = 父级.lastElementChild || 父级.lastChild;

**文本节点(换行 空格 文字)
====================================================
1.DOM开始 所有关于节点类单词五遍
2.window.navigator.userAgent  判断 chrome FF ie 6 7 8























